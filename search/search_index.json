{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Task Management API","title":"Home"},{"location":"#welcome-task-management-api","text":"","title":"Welcome Task Management API"},{"location":"architecture/","text":"System Architecture Overview High-Level Diagram (Insert system architecture diagram here) Components Frontend : (React, Vue, etc.) Backend : (Node.js/Express, Django, etc.) Database : (MongoDB, PostgreSQL, etc.) Third-Party Services : (Auth0, Stripe, etc.) Data Flow Describe the flow of data from client requests to backend services and databases. Scaling Considerations Notes on load balancers, caching, queues, etc.","title":"Architecture"},{"location":"architecture/#system-architecture-overview","text":"","title":"System Architecture Overview"},{"location":"architecture/#high-level-diagram","text":"(Insert system architecture diagram here)","title":"High-Level Diagram"},{"location":"architecture/#components","text":"Frontend : (React, Vue, etc.) Backend : (Node.js/Express, Django, etc.) Database : (MongoDB, PostgreSQL, etc.) Third-Party Services : (Auth0, Stripe, etc.)","title":"Components"},{"location":"architecture/#data-flow","text":"Describe the flow of data from client requests to backend services and databases.","title":"Data Flow"},{"location":"architecture/#scaling-considerations","text":"Notes on load balancers, caching, queues, etc.","title":"Scaling Considerations"},{"location":"reference/","text":"Reference Mongoose official docs Mongodb docs","title":"Reference"},{"location":"reference/#reference","text":"Mongoose official docs Mongodb docs","title":"Reference"},{"location":"api/endpoints/","text":"API Endpoints Method Endpoint Description Auth Required POST /auth/login User login No POST /auth/signup User registration No GET /tasks Get list of user tasks Yes POST /tasks Create new task Yes PUT /tasks/:id Update task Yes DELETE /tasks/:id Delete task Yes Request & Response Examples ```json // Example: POST /tasks { \"title\": \"Buy groceries\", \"dueDate\": \"2025-08-01\" }","title":"Endpoints"},{"location":"api/endpoints/#api-endpoints","text":"Method Endpoint Description Auth Required POST /auth/login User login No POST /auth/signup User registration No GET /tasks Get list of user tasks Yes POST /tasks Create new task Yes PUT /tasks/:id Update task Yes DELETE /tasks/:id Delete task Yes","title":"API Endpoints"},{"location":"api/endpoints/#request-response-examples","text":"```json // Example: POST /tasks { \"title\": \"Buy groceries\", \"dueDate\": \"2025-08-01\" }","title":"Request &amp; Response Examples"},{"location":"api/errors/","text":"API Error Responses Status Code Message Description 400 Bad Request Invalid request parameters 401 Unauthorized Missing or invalid auth token 403 Forbidden Access denied 404 Not Found Resource does not exist 500 Internal Server Error Unexpected server error Error Response Format ```json { \"error\": { \"code\": 400, \"message\": \"Title is required\" } }","title":"Errors"},{"location":"api/errors/#api-error-responses","text":"Status Code Message Description 400 Bad Request Invalid request parameters 401 Unauthorized Missing or invalid auth token 403 Forbidden Access denied 404 Not Found Resource does not exist 500 Internal Server Error Unexpected server error","title":"API Error Responses"},{"location":"api/errors/#error-response-format","text":"```json { \"error\": { \"code\": 400, \"message\": \"Title is required\" } }","title":"Error Response Format"},{"location":"api/overview/","text":"API Overview API Type REST / GraphQL Base URL https://api.example.com/v1 Authentication JWT Bearer tokens in Authorization header Rate Limiting Max 100 requests per minute per user/IP Versioning Strategy URI versioning /v1/","title":"Overview"},{"location":"api/overview/#api-overview","text":"","title":"API Overview"},{"location":"api/overview/#api-type","text":"REST / GraphQL","title":"API Type"},{"location":"api/overview/#base-url","text":"https://api.example.com/v1","title":"Base URL"},{"location":"api/overview/#authentication","text":"JWT Bearer tokens in Authorization header","title":"Authentication"},{"location":"api/overview/#rate-limiting","text":"Max 100 requests per minute per user/IP","title":"Rate Limiting"},{"location":"api/overview/#versioning-strategy","text":"URI versioning /v1/","title":"Versioning Strategy"},{"location":"auth/auth-flow/","text":"","title":"Auth Flow"},{"location":"auth/roles-permissions/","text":"Roles & Permissions User Roles Role Description Admin Full access User Limited access Guest Read-only Permissions Matrix Action Admin User Guest Create Task \u2705 \u2705 \u274c Delete Task \u2705 \u274c \u274c View Reports \u2705 \u2705 \u274c Enforcement Middleware to check roles on protected endpoints","title":"Roles & Permissions"},{"location":"auth/roles-permissions/#roles-permissions","text":"","title":"Roles &amp; Permissions"},{"location":"auth/roles-permissions/#user-roles","text":"Role Description Admin Full access User Limited access Guest Read-only","title":"User Roles"},{"location":"auth/roles-permissions/#permissions-matrix","text":"Action Admin User Guest Create Task \u2705 \u2705 \u274c Delete Task \u2705 \u274c \u274c View Reports \u2705 \u2705 \u274c","title":"Permissions Matrix"},{"location":"auth/roles-permissions/#enforcement","text":"Middleware to check roles on protected endpoints","title":"Enforcement"},{"location":"database/erd/","text":"Entity Relationship Diagram (ERD) (Insert ERD diagram here) Entities User Task Project Relationships One User has many Tasks Tasks belong to Projects Notes Explain choices for embedding vs referencing (MongoDB) or foreign keys (SQL).","title":"ERD"},{"location":"database/erd/#entity-relationship-diagram-erd","text":"(Insert ERD diagram here)","title":"Entity Relationship Diagram (ERD)"},{"location":"database/erd/#entities","text":"User Task Project","title":"Entities"},{"location":"database/erd/#relationships","text":"One User has many Tasks Tasks belong to Projects","title":"Relationships"},{"location":"database/erd/#notes","text":"Explain choices for embedding vs referencing (MongoDB) or foreign keys (SQL).","title":"Notes"},{"location":"database/seed-data/","text":"Database Seed Data Purpose Seed initial data for dev or testing. Sample Seed Script ```js // Example seed for MongoDB await User.create([{ name: 'Test User', email: 'test@example.com' }]);","title":"Seed Data"},{"location":"database/seed-data/#database-seed-data","text":"","title":"Database Seed Data"},{"location":"database/seed-data/#purpose","text":"Seed initial data for dev or testing.","title":"Purpose"},{"location":"database/seed-data/#sample-seed-script","text":"```js // Example seed for MongoDB await User.create([{ name: 'Test User', email: 'test@example.com' }]);","title":"Sample Seed Script"},{"location":"devops/backups/","text":"Backup Strategy Backup Frequency Daily automated DB backups Weekly full backups Storage Location AWS S3 or equivalent durable storage Restore Plan Steps to restore backups Testing Backups Regular restore drills to verify backups","title":"Backups"},{"location":"devops/backups/#backup-strategy","text":"","title":"Backup Strategy"},{"location":"devops/backups/#backup-frequency","text":"Daily automated DB backups Weekly full backups","title":"Backup Frequency"},{"location":"devops/backups/#storage-location","text":"AWS S3 or equivalent durable storage","title":"Storage Location"},{"location":"devops/backups/#restore-plan","text":"Steps to restore backups","title":"Restore Plan"},{"location":"devops/backups/#testing-backups","text":"Regular restore drills to verify backups","title":"Testing Backups"},{"location":"devops/deployment/","text":"Deployment Guide Hosting Provider AWS / DigitalOcean / Vercel / Heroku / Render Deployment Steps Build app ( npm run build ) Push code to GitHub CI/CD pipeline deploys automatically Run DB migrations if any Rollbacks Steps to revert deployment Zero Downtime Load balancers, blue-green deploys","title":"Deployment"},{"location":"devops/deployment/#deployment-guide","text":"","title":"Deployment Guide"},{"location":"devops/deployment/#hosting-provider","text":"AWS / DigitalOcean / Vercel / Heroku / Render","title":"Hosting Provider"},{"location":"devops/deployment/#deployment-steps","text":"Build app ( npm run build ) Push code to GitHub CI/CD pipeline deploys automatically Run DB migrations if any","title":"Deployment Steps"},{"location":"devops/deployment/#rollbacks","text":"Steps to revert deployment","title":"Rollbacks"},{"location":"devops/deployment/#zero-downtime","text":"Load balancers, blue-green deploys","title":"Zero Downtime"},{"location":"devops/monitoring/","text":"Monitoring & Alerts Tools Sentry for error tracking Prometheus + Grafana for metrics Logtail or ELK stack for logs Alerts Slack or email notifications on errors or downtime Health Checks API health endpoints monitored every 1 min","title":"Monitoring & Logs"},{"location":"devops/monitoring/#monitoring-alerts","text":"","title":"Monitoring &amp; Alerts"},{"location":"devops/monitoring/#tools","text":"Sentry for error tracking Prometheus + Grafana for metrics Logtail or ELK stack for logs","title":"Tools"},{"location":"devops/monitoring/#alerts","text":"Slack or email notifications on errors or downtime","title":"Alerts"},{"location":"devops/monitoring/#health-checks","text":"API health endpoints monitored every 1 min","title":"Health Checks"},{"location":"guides/contributing/","text":"Contributing Guide How to Contribute Fork repo Create feature branch Write tests Open PR for review Code Style Follow ESLint & Prettier rules Commit Messages Use conventional commits (feat, fix, docs, etc.) Communication Use project Slack/Discord for questions","title":"Contributing"},{"location":"guides/contributing/#contributing-guide","text":"","title":"Contributing Guide"},{"location":"guides/contributing/#how-to-contribute","text":"Fork repo Create feature branch Write tests Open PR for review","title":"How to Contribute"},{"location":"guides/contributing/#code-style","text":"Follow ESLint & Prettier rules","title":"Code Style"},{"location":"guides/contributing/#commit-messages","text":"Use conventional commits (feat, fix, docs, etc.)","title":"Commit Messages"},{"location":"guides/contributing/#communication","text":"Use project Slack/Discord for questions","title":"Communication"},{"location":"guides/faq/","text":"FAQ What tech stack does this project use? Node.js, Express, MongoDB, React How to run locally? See Local Development Setup Who do I contact for support? Email: support@example.com Where is the API documentation? See API Overview","title":"FAQ"},{"location":"guides/faq/#faq","text":"","title":"FAQ"},{"location":"guides/faq/#what-tech-stack-does-this-project-use","text":"Node.js, Express, MongoDB, React","title":"What tech stack does this project use?"},{"location":"guides/faq/#how-to-run-locally","text":"See Local Development Setup","title":"How to run locally?"},{"location":"guides/faq/#who-do-i-contact-for-support","text":"Email: support@example.com","title":"Who do I contact for support?"},{"location":"guides/faq/#where-is-the-api-documentation","text":"See API Overview","title":"Where is the API documentation?"},{"location":"setup/environments/","text":"Environment Configurations Environments Development Staging Production Environment Variables Variable Description Example MONGO_URI MongoDB connection string mongodb://... JWT_SECRET Secret for JWT tokens supersecretkey PORT Server port 3000 Managing Secrets Use dotenv locally Use secret managers in prod (AWS Secrets Manager, Vault)","title":"Environments & Secrets"},{"location":"setup/environments/#environment-configurations","text":"","title":"Environment Configurations"},{"location":"setup/environments/#environments","text":"Development Staging Production","title":"Environments"},{"location":"setup/environments/#environment-variables","text":"Variable Description Example MONGO_URI MongoDB connection string mongodb://... JWT_SECRET Secret for JWT tokens supersecretkey PORT Server port 3000","title":"Environment Variables"},{"location":"setup/environments/#managing-secrets","text":"Use dotenv locally Use secret managers in prod (AWS Secrets Manager, Vault)","title":"Managing Secrets"},{"location":"setup/local-dev/","text":"Local Development Setup Prerequisites Node.js vXX+ Docker (optional) MongoDB/Postgres locally or remote Steps Clone repo: git clone <repo-url> Install dependencies: npm install Setup .env file (copy .env.example ) Run local server: npm run dev Common Issues DB connection errors Port conflicts","title":"Local Development"},{"location":"setup/local-dev/#local-development-setup","text":"","title":"Local Development Setup"},{"location":"setup/local-dev/#prerequisites","text":"Node.js vXX+ Docker (optional) MongoDB/Postgres locally or remote","title":"Prerequisites"},{"location":"setup/local-dev/#steps","text":"Clone repo: git clone <repo-url> Install dependencies: npm install Setup .env file (copy .env.example ) Run local server: npm run dev","title":"Steps"},{"location":"setup/local-dev/#common-issues","text":"DB connection errors Port conflicts","title":"Common Issues"},{"location":"testing/test-setup/","text":"Test Setup Test Environment Use separate test DB instance or in-memory DB (MongoMemoryServer) Running Tests npm test Mocking Mock external services (email, payments) Continuous Integration Tests run automatically on PRs (GitHub Actions)","title":"Setup"},{"location":"testing/test-setup/#test-setup","text":"","title":"Test Setup"},{"location":"testing/test-setup/#test-environment","text":"Use separate test DB instance or in-memory DB (MongoMemoryServer)","title":"Test Environment"},{"location":"testing/test-setup/#running-tests","text":"npm test","title":"Running Tests"},{"location":"testing/test-setup/#mocking","text":"Mock external services (email, payments)","title":"Mocking"},{"location":"testing/test-setup/#continuous-integration","text":"Tests run automatically on PRs (GitHub Actions)","title":"Continuous Integration"},{"location":"testing/unit-vs-integration/","text":"","title":"Strategy"}]}